<div class="centerContent">
    <div class="middleContent">
        <h1 id="questionTitle" class="pageTitle">What Is Your Question?</h1>
        <input type="text" id="question" placeholder="Question" class="largeInput" />
    </div>
    <div class="middleContent">
        <h2>Please describe your question</h2>
        <textarea id="description" placeholder="Answer"
            style="height: 150px;  width: 500px;  resize: none;  font-size: 17px; font-family: Arial, Helvetica, sans-serif; "></textarea>
    </div>
    <div class="middleContent">
        <h2>Which Subject Are You Asking About?</h2>
        <select name="subject" id="subject" class="mainSelect">
            <option value="none">Subject</option>
            <option value="Math">Math</option>
            <option value="Science">Science</option>
            <option value="English">English</option>
            <option value="History">History</option>
            <option value="Other">Other</option>
        </select>
    </div>
    <div class="middleContent">
        <h2>Add An Image To Show Extra Work or Details</h2>
        <input type="file" id="imageUpload" class="file-select" accept="image/*" hidden />
        <label for="imageUpload" class="imageSelectLabel" style="margin-bottom:10px">Choose file</label>
        <span id="file-chosen">No file chosen</span>
    </div>
    <div>
        <button type="button" class="submitButton" id="submit">Submit</button>
    </div>
    <h2 id="errorLabel"></h2>

    <script>
        //add firestore to file
        let db = firebase.firestore()
        //show which file the user has selected if they have chosen a file
        const actualBtn = document.getElementById('imageUpload');
        const fileChosen = document.getElementById('file-chosen');
        actualBtn.addEventListener('change', function () {
            //grab file name and change span text to show file name
            fileChosen.textContent = this.files[0].name
        })
        var errorLabel = document.getElementById("errorLabel")
        var submitButton = document.getElementById("submit")
        submitButton.onclick = validateField
        //save user id
        var userID = ""
        //check to see all fields are filled
        function validateField() {
            let question = document.getElementById("question").value
            let description = document.getElementById("description").value
            let subject = document.getElementById("subject").value
            if (question.length != 0 && description.length != 0) {
                //all fields are filled 
                if (subject != "none") {
                    //subject has been selected so question can be added to firestore
                    //do a check to make sure user is signed in
                    firebase.auth().onAuthStateChanged(function (user) {
                        if (user) {
                            //Save user id
                            userID = user.uid
                            // User is signed in.
                            addQuestion(question, description, subject, user.uid)
                        } else {
                            // No user is signed in.
                            showError("You must be signed in to ask a quesiton")
                        }
                    })
                } else {
                    //user needs to add a subject
                    showError("Please select a subject for your question")
                }
            } else {
                //user needs to add all required information
                showError("Please fill in all fields")
            }
        }
        //add question to firestore
        function addQuestion(question, description, subject, uid) {
            var image = document.getElementById("imageUpload").files[0]
            if (image != null) {
                //user has uploaded an image along with the question, add image to firestore first to get image url
                //create storage reference to image
                const ref = firebase.storage().ref().child("question_images/" + image.name)
                //put the image into firestore
                ref.put(image).then((snapshot) => {
                    //get url for newly uploaded image
                    snapshot.ref.getDownloadURL().then((downloadURL) => {
                        console.log('File available at', downloadURL);
                        //url gotten successfully, add question to firestore
                        db.collection("questions").add({
                            question: question,
                            description: description,
                            subject: subject,
                            author: uid,
                            acceptedAnswer: "",
                            upvotes: 0,
                            answers: [],
                            hasImage: true,
                            imageURL: downloadURL,
                            created: firebase.firestore.Timestamp.now()
                        }).then(function (docRef) {
                            //add questionID to user information
                            db.collection("users").doc(userID).update({
                                questions: firebase.firestore.FieldValue.arrayUnion(docRef.id)
                            }).catch((error) => {
                                console.error("Error Adding Question To User Data: ", error)
                                //todo: delete newly created question
                            })
                            //link to question page
                            var newURL = "/question/show/" + docRef.id
                            console.log(newURL)
                            window.location.href = newURL
                        }).catch((error) => {
                            console.error("Error Adding Question Data: ", error)
                            //todo: delete newly created question
                        })
                    }).catch((error) => {
                        //error uploading image display error to user
                        showError("Error uploading image, please try again later or contact support")
                    })
                }).catch((error) => {
                    //error uploading image display error to user
                    showError("Error uploading image, please try again later or contact support")
                })
            } else {
                //user has not uploaded an image, just upload question
                db.collection("questions").add({
                    question: question,
                    description: description,
                    subject: subject,
                    author: uid,
                    acceptedAnswer: "",
                    upvotes: 0,
                    answers: [],
                    hasImage: false,
                    imageURL: "",
                    created: firebase.firestore.Timestamp.now()
                }).then(function (docRef) {
                    //add questionID to user information
                    db.collection("users").doc(userID).update({
                        questions: firebase.firestore.FieldValue.arrayUnion(docRef.id)
                    }).catch((error) => {
                        console.error("Error Adding Question: ", error)
                        //todo: delete newly created question
                    })
                    //link to question page
                    var newURL = "/question/show/" + docRef.id
                    console.log(newURL)
                    window.location.href = newURL
                }).catch((error) => {
                    console.error("Error Adding Question: ", error)
                    //todo: delete newly created question
                })
            }

        }
        //display error to user
        function showError(error) {
            errorLabel.innerHTML = error
        }

    </script>
</div>