<div class="centerContent">
    <div id="questionDiv">
        <h1 id="questionTitle" style="margin-top: 5px;" class="pageTitle"></h1>
        <h3 id="questionSubject" class="secondaryTitle" style="margin-top: 5px;border-bottom: 1px solid gray;"></h3>
        <p id="questionDescription" style="margin-top: 5px;width: 650px;margin-left:auto;margin-right:auto;"></p>
    </div>
    <div class="upvoteContainer" style="margin-top: 5px;">
        <input type="image" id="upvoteQuestion" class="upvoteButton" height="25px" width="25px"
            src="https://firebasestorage.googleapis.com/v0/b/ssw-project-one.appspot.com/o/images%2FupvoteArrowUnselected.png?alt=media&token=67e58f8e-5f78-4d2a-a3aa-530858b8ef66">
        <h4 id="questionUpvotes" class="upvoteText"></h4>
    </div>
    <h4 id="asker" class="authorText" style="border-bottom: 1px solid gray;"></h4>
    <div style="border-bottom: 1px solid gray;" class="newAnswer">
        <h3>Add An Answer</h3>
        <textarea id="answer" placeholder="Answer"
            style="height: 150px;  width: 500px;  resize: none;  font-size: 17px; font-family: Arial, Helvetica, sans-serif;"></textarea>
        <h4>Add An Image To Show Extra Work or Details</h4>
        <input type="file" id="imageUpload" class="file-select" accept="image/*" hidden />
        <label for="imageUpload" class="imageSelectLabel" style="margin-bottom:10px">Choose file</label>
        <span id="file-chosen">No file chosen</span>
        <div style="margin-top: 5px;">
            <button type="button" class="submitButton" id="submitAnswer">Submit</button>
        </div>
        <h4 id="answerError"></h4>
    </div>
    <div id="acceptedAnswer">
        <h3 id="acceptedAnswerTitle"></h3>
    </div>
    <div id="answers">
        <h3>Other Answers</h3>

    </div>
</div>

<script>
    //get question id
    let qID = "{{question}}"
    //add firestore to file
    let db = firebase.firestore()
    //button image urls
    let whiteArrowUrl = "https://firebasestorage.googleapis.com/v0/b/ssw-project-one.appspot.com/o/images%2FupvoteArrowUnselected.png?alt=media&token=67e58f8e-5f78-4d2a-a3aa-530858b8ef66"
    let redArrowUrl = "https://firebasestorage.googleapis.com/v0/b/ssw-project-one.appspot.com/o/images%2FupvoteArrowSelected.png?alt=media&token=2a97d394-8801-49fe-9a11-e9dcc4850e29"
    //show which file the user has selected if they have chosen a file
    const actualBtn = document.getElementById('imageUpload');
    const fileChosen = document.getElementById('file-chosen');
    actualBtn.addEventListener('change', function () {
        //grab file name and change span text to show file name
        fileChosen.textContent = this.files[0].name
    })
    //current user username
    var username = ""
    var uid = ""
    var questionAskerID = ""
    var hasAcceptedAnswer = false
    var hasBeenUpvoted = false
    var acceptedAnswerID = ""
    //get current user, and then grab their username
    function getUserInfo() {
        firebase.auth().onAuthStateChanged(function (user) {
            if (user) {
                //there is a user signed in, get the user document from firebase
                db.collection("users").doc(user.uid).get().then((doc) => {
                    if (doc.exists) {
                        //user document found, save their usename 
                        uid = user.uid
                        username = doc.data().username
                        //grab and show answers
                        showAnswers()
                    } else {
                        //no user document found, treat as if no user signed in
                        showAnswers()
                    }
                })
            } else {
                //no user signed in, grab and show answers
                showAnswers()
            }
        })
    }
    //add functionality to upvote question
    var upvoteQuestionButton = document.getElementById("upvoteQuestion")
    var questionUpvotesText = document.getElementById("questionUpvotes")
    upvoteQuestionButton.onclick = function () {
        if (hasBeenUpvoted == true) {
            db.collection("questions").doc(qID).update({
                upvotes: firebase.firestore.FieldValue.increment(-1)
            }).then(() => {
                //change number shown in html, and button image
                upvoteQuestionButton.src = whiteArrowUrl
                var currentValue = questionUpvotesText.innerHTML
                questionUpvotesText.innerHTML = parseInt(currentValue) - 1
                hasBeenUpvoted = false
            })
                .catch((error) => {
                    //show there was an error upvoting
                    let temp = questionUpvotesText.innerHTML
                    questionUpvotesText.innerHTML = "There was an error removing your upvote" + temp
                    // The document probably doesn"t exist.
                    console.error("Error updating document: ", error)
                })
        } else {
            db.collection("questions").doc(qID).update({
                upvotes: firebase.firestore.FieldValue.increment(1)
            }).then(() => {
                //change number shown in html, and button image
                upvoteQuestionButton.src = redArrowUrl
                var currentValue = questionUpvotesText.innerHTML
                questionUpvotesText.innerHTML = parseInt(currentValue) + 1
                hasBeenUpvoted = true
            })
                .catch((error) => {
                    //show there was an error upvoting
                    let temp = questionUpvotesText.innerHTML
                    questionUpvotesText.innerHTML = "There was an error adding your upvote" + temp
                    // The document probably doesn"t exist.
                    console.error("Error updating document: ", error)
                })
        }
    }
    document.getElementById("submitAnswer").onclick = submitAnswer

    db.collection("questions").doc(qID).get().then((doc) => {
        if (doc.exists) {
            //got document successfully
            showQuestionData(doc.data().question, doc.data().description, doc.data().subject, doc.data().upvotes, doc.data().hasImage, doc.data().imageURL)
            //Get the username for the asker
            getAskerUsername(doc.data().author)
            //Save author id to check if user should see accept answer button
            questionAskerID = doc.data().author
            //check to see if question has an accepted answer or not
            if (doc.data().acceptedAnswer == "") {
                //no accepted answer
                hasAcceptedAnswer = false
            } else {
                //question has accepted answer, grab from firebase and display question
                acceptedAnswerID = doc.data().acceptedAnswer
                showAcceptedAnswer(doc.data().acceptedAnswer)
            }
            //get user information to add to answers 
            getUserInfo()
        } else {
            //could not find question, redirect user
            console.log("No such document!")
        }
    }).catch((error) => {
        console.log("Error getting document:", error)
    })

    function showQuestionData(question, description, subject, upvotes, hasImage, imageURL) {
        //add question data to HTML
        document.getElementById("title").innerHTML = question
        document.getElementById("questionTitle").innerHTML = question
        document.getElementById("questionSubject").innerHTML = "Subject: " + subject
        document.getElementById("questionDescription").innerHTML = description
        document.getElementById("questionUpvotes").innerHTML = upvotes
        //check to see if question has an image
        if (hasImage == true) {
            //question has an image, add image element to HTML page
            var image = document.createElement("img")
            image.setAttribute("src", imageURL)
            image.setAttribute("style", "object-fit: cover;max-width:500px;")
            //add image to div
            document.getElementById("questionDiv").appendChild(image)
        }
    }

    function getAskerUsername(id) {
        db.collection("users").doc(id).get().then((userDoc) => {
            if (userDoc.exists) {
                //got document, show username
                username = userDoc.data().username
                document.getElementById("asker").innerHTML = "Asked By, " + userDoc.data().username
            } else {
                console.log("Error getting user data")
            }
        })
    }

    function submitAnswer() {
        //check to see if user is signed in
        firebase.auth().onAuthStateChanged(function (user) {
            if (user) {
                // User is signed in.
                let answer = document.getElementById("answer").value
                //check to see if user uploaded an image of their work
                var image = document.getElementById("imageUpload").files[0]
                if (image != null) {
                    //user has uploaded an image along with the question, add image to firestore first to get image url
                    //create storage reference to image
                    const ref = firebase.storage().ref().child("answer_images/" + image.name)
                    //put the image into firestore
                    ref.put(image).then((snapshot) => {
                        //get url for newly uploaded image
                        snapshot.ref.getDownloadURL().then((downloadURL) => {
                            console.log('File available at', downloadURL);
                            //url gotten successfully, add answer to firestore
                            db.collection("answers").add({
                                answer: answer,
                                author: username,
                                authorID: user.uid,
                                question: qID,
                                hasImage: true,
                                imageURL: downloadURL,
                                upvotes: 0
                            }).then(function (docRef) {
                                location.reload()
                            }).catch((error) => {
                                console.error("Error Adding Answer: ", error)
                                //todo: delete newly created question
                            })
                        }).catch((error) => {
                            //error uploading image display error to user
                            document.getElementById("answerError").innerHTML("Error uploading image, please try again later or contact support")
                        })
                    }).catch((error) => {
                        //error uploading image display error to user
                        document.getElementById("answerError").innerHTML("Error uploading image, please try again later or contact support")
                    })
                } else {
                    //no image uploaded, add question to firebase without question
                    db.collection("answers").add({
                        answer: answer,
                        author: username,
                        authorID: user.uid,
                        question: qID,
                        hasImage: false,
                        imageURL: "",
                        upvotes: 0
                    }).then(function (docRef) {
                        location.reload()
                    }).catch((error) => {
                        console.error("Error Adding Answer: ", error)
                        //todo: delete newly created question
                    })
                }
            } else {
                // No user is signed in.
                document.getElementById("answerError").innerHTML = "Please sign in to answer this question"
            }
        })
    }
    //this function grabs the answers from firestore and adds them to the html
    function showAnswers() {
        var answerQuery = db.collection("answers").where("question", "==", qID).orderBy("upvotes", "desc").get().then((querySnapshot) => {
            querySnapshot.forEach((answerDoc) => {
                //check to see if current answer is accepted answer, if it is, skip and go on to next answer
                if (answerDoc.id != acceptedAnswerID) {
                    //current answer is not accepted answer, add it to HTML
                    //grabbed answers for this question from firebase
                    //add answers to the html
                    var answerTextDiv = document.createElement("div")
                    answerTextDiv.setAttribute("class", "answerTextDiv")
                    var answerContainer = document.createElement("p")
                    answerContainer.setAttribute("style", "width: 650px;margin-left:auto;margin-right:auto;")
                    var answerBody = document.createTextNode(answerDoc.data().answer)
                    answerContainer.appendChild(answerBody)
                    answerTextDiv.appendChild(answerContainer)

                    var upvoteDiv = document.createElement("div")
                    upvoteDiv.setAttribute("class", "upvoteContainer")

                    var upvoteContainer = document.createElement("h4")
                    var upvoteText = document.createTextNode(answerDoc.data().upvotes)
                    upvoteContainer.appendChild(upvoteText)
                    upvoteContainer.setAttribute("class", "upvoteText")

                    var authorDiv = document.createElement("div")
                    authorDiv.setAttribute("class", "authorDiv")
                    var authorContainer = document.createElement("h4")
                    var body = " By, " + answerDoc.data().author
                    var authorBody = document.createTextNode(body)
                    authorContainer.appendChild(authorBody)
                    authorContainer.setAttribute("class", "authorText")
                    authorDiv.appendChild(authorContainer)

                    var upvoteButton = document.createElement("input")
                    upvoteButton.setAttribute("type", "image")
                    upvoteButton.setAttribute("class", "upvoteButton")
                    upvoteButton.setAttribute("src", whiteArrowUrl)
                    upvoteButton.setAttribute("height", "25px")
                    upvoteButton.setAttribute("width", "25px")
                    //todo: change button image to look like up arrow
                    upvoteButton.onclick = function () {
                        upvoteQuestion(upvoteButton, answerDoc.id, upvoteContainer)
                    }
                    upvoteButton.innerHTML = "Upvote"
                    //add upvote text and button to div
                    upvoteDiv.appendChild(upvoteButton)
                    upvoteDiv.appendChild(upvoteContainer)
                    var answerDiv = document.createElement("div")
                    answerDiv.setAttribute("class", "answer")
                    answerDiv.appendChild(answerTextDiv)
                    //check to see if answer has an image
                    if (answerDoc.data().hasImage == true) {
                        // there is an image, add image to div
                        var image = document.createElement("img")
                        image.setAttribute("src", answerDoc.data().imageURL)
                        image.setAttribute("style", "object-fit: cover;max-width:500px;")
                        answerDiv.appendChild(image)
                    }

                    answerDiv.appendChild(authorDiv)
                    answerDiv.appendChild(upvoteDiv)

                    //check to see if user is owner of question and has an correct answer selected
                    if (uid == questionAskerID && hasAcceptedAnswer == false) {
                        //user is author and has no accepted answer selected
                        var acceptAnswerButton = document.createElement("button")
                        acceptAnswerButton.setAttribute("type", "button")
                        acceptAnswerButton.setAttribute("class", "submitButton")
                        acceptAnswerButton.setAttribute("style", "margin-top: 5px;")
                        var acceptAnswerButtonText = document.createTextNode("Accept Answer")
                        acceptAnswerButton.appendChild(acceptAnswerButtonText)

                        //add functionality to button that adds current answer as the accepted answer to the current question
                        acceptAnswerButton.onclick = function () {
                            //update the question document to add current answer as accepted answer
                            db.collection("questions").doc(qID).update({
                                acceptedAnswer: answerDoc.id
                            }).then(function (docRef) {
                                location.reload()
                            }).catch((error) => {
                                console.error("Error Adding Answer as accepted answer: ", error)
                                //todo: delete newly created question
                            })
                        }

                        answerDiv.appendChild(acceptAnswerButton)
                    }

                    var totalAnswerDiv = document.getElementById("answers")
                    totalAnswerDiv.appendChild(answerDiv)
                }

            })
        }).catch((error) => {
            console.log("Error getting answers: ", error)
        })

    }
    //add upvotes to firebase
    function upvoteQuestion(button, id, upvote) {
        if (button.src == redArrowUrl) {
            button.isClicked = true
            //remove added upvote to the question
            db.collection("answers").doc(id).update({
                upvotes: firebase.firestore.FieldValue.increment(-1)
            }).then(() => {
                //change number shown in html, change input image
                button.src = whiteArrowUrl
                var currentValue = upvote.innerHTML
                upvote.innerHTML = parseInt(currentValue) - 1
            })
                .catch((error) => {
                    //todo: show user there was an error upvoting questions
                    // The document probably doesn"t exist.
                    console.error("Error updating document: ", error)
                })
        } else {
            button.isClicked = false
            //add upvote to the answer
            db.collection("answers").doc(id).update({
                upvotes: firebase.firestore.FieldValue.increment(1)
            }).then(() => {
                //change number shown in html, change input image
                button.src = redArrowUrl
                var currentValue = upvote.innerHTML
                upvote.innerHTML = parseInt(currentValue) + 1
            })
                .catch((error) => {
                    //todo: show user there was an error upvoting questions
                    console.error("Error updating document: ", error)
                })
        }
    }
    //grab accepted answer from firebase and add it to the HTML
    function showAcceptedAnswer(answerID) {
        db.collection("answers").doc(answerID).get().then((doc) => {
            //add answers to the html
            var answerTextDiv = document.createElement("div")
            answerTextDiv.setAttribute("class", "answerTextDiv")
            var answerContainer = document.createElement("p")
            answerContainer.setAttribute("style", "width: 650px;margin-left:auto;margin-right:auto;")
            var answerBody = document.createTextNode(doc.data().answer)
            answerContainer.appendChild(answerBody)
            answerTextDiv.appendChild(answerContainer)

            var upvoteDiv = document.createElement("div")
            upvoteDiv.setAttribute("class", "upvoteContainer")

            var upvoteContainer = document.createElement("h4")
            var upvoteText = document.createTextNode(doc.data().upvotes)
            upvoteContainer.appendChild(upvoteText)
            upvoteContainer.setAttribute("class", "upvoteText")

            var authorDiv = document.createElement("div")
            authorDiv.setAttribute("class", "authorDiv")
            var authorContainer = document.createElement("h4")
            var body = " By, " + doc.data().author
            var authorBody = document.createTextNode(body)
            authorContainer.appendChild(authorBody)
            authorContainer.setAttribute("class", "authorText")
            authorDiv.appendChild(authorContainer)

            var upvoteButton = document.createElement("input")
            upvoteButton.setAttribute("type", "image")
            upvoteButton.setAttribute("class", "upvoteButton")
            upvoteButton.setAttribute("src", whiteArrowUrl)
            upvoteButton.setAttribute("height", "25px")
            upvoteButton.setAttribute("width", "25px")
            //todo: change button image to look like up arrow
            upvoteButton.onclick = function () {
                upvoteQuestion(upvoteButton, answerDoc.id, upvoteContainer)
            }
            upvoteButton.innerHTML = "Upvote"
            //add upvote text and button to div
            upvoteDiv.appendChild(upvoteButton)
            upvoteDiv.appendChild(upvoteContainer)
            var answerDiv = document.createElement("div")
            answerDiv.setAttribute("class", "answer")
            answerDiv.appendChild(answerTextDiv)
            //check to see if answer has an image
            if (doc.data().hasImage == true) {
                // there is an image, add image to div
                var image = document.createElement("img")
                image.setAttribute("src", doc.data().imageURL)
                image.setAttribute("style", "object-fit: cover;max-width:500px;")
                answerDiv.appendChild(image)
            }

            answerDiv.appendChild(authorDiv)
            answerDiv.appendChild(upvoteDiv)

            var totalAnswerDiv = document.getElementById("acceptedAnswer")
            totalAnswerDiv.appendChild(answerDiv)

            document.getElementById("acceptedAnswer").setAttribute("style", "border-bottom: 1px solid gray;")
            document.getElementById("acceptedAnswerTitle").innerHTML = "Accepted Answer"
        })
    }

</script>